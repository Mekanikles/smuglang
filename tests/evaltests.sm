def cchar = #primitives.c.char;
def cint = #primitives.c.int;

extern printf : func(fmt : cchar*, args...) -> errCode : cint;	

eval("printf(\"Hello evaled statement!\n\");");

{
	var x = 32;

	{
		eval("
				var x = 64;
				var y : #primitives.u8 = x;
				helloFunc();
				");

		printf("Value should be 64: \"%i\"\n", y);
	}

	var y : #primitives.u8 = x;
	printf("Value should be 32: \"%i\"\n", y);

	eval("eval(\"printf(\\\"Hello nested eval!\n\\\");\");");
}

eval("
		func helloFunc()
		{
			printf(\"Hello late evaled function!\n\");
		};");


eval(chainedReturnValue());

func innerValue() -> cchar*
{
	return "printf(\"Hello chained eval function\");";
};

func chainedReturnValue() -> cchar*
{
	return innerValue();
};